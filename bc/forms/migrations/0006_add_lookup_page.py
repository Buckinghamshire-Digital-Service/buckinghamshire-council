# Generated by Django 2.2.13 on 2020-10-13 01:29

import django.contrib.postgres.fields
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models

import bc.area_finder.utils


class Migration(migrations.Migration):

    dependencies = [
        ("images", "0003_job_employer_logo"),
        ("wagtailcore", "0045_assign_unlock_grouppagepermission"),
        ("forms", "0005_update_listing_summary_help_text"),
    ]

    operations = [
        migrations.CreateModel(
            name="LookupPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Meta description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                (
                    "redirect_to",
                    models.URLField(
                        blank=True,
                        help_text="Entering a URL here will prevent the page from being visited, and will instead redirect the user.",
                        verbose_name="Redirect to external URL",
                    ),
                ),
                (
                    "show_live_chat_client",
                    models.BooleanField(
                        default=False,
                        help_text="Show live chat support client on this page",
                    ),
                ),
                (
                    "form_heading",
                    wagtail.fields.RichTextField(verbose_name="Heading"),
                ),
                ("input_label", models.CharField(max_length=255)),
                ("input_help_text", models.CharField(max_length=255)),
                (
                    "action_text",
                    models.CharField(
                        blank=True,
                        help_text='Form action text. Defaults to "Submit".',
                        max_length=32,
                    ),
                ),
                (
                    "no_match_message",
                    models.CharField(
                        help_text="Message shown when an invalid input is given",
                        max_length=255,
                    ),
                ),
                (
                    "start_again_text",
                    models.CharField(
                        help_text="A link to reset the form and perform another lookup",
                        max_length=255,
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="PostcodeLookupResponse",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answer",
                    models.TextField(
                        help_text="You can include the postcode in the answer by writing {postcode}."
                    ),
                ),
                (
                    "link_button_text",
                    models.CharField(
                        blank=True,
                        help_text="Leave blank to use the link page title.",
                        max_length=32,
                    ),
                ),
                (
                    "postcodes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=10,
                            validators=[bc.area_finder.utils.validate_postcode],
                        ),
                        help_text="Enter a comma-separated list of postcodes. Individual values will be validated and reformatted.",
                        size=None,
                    ),
                ),
                (
                    "link_page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="forms.LookupPage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LookupPageRelatedPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_pages",
                        to="forms.LookupPage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
